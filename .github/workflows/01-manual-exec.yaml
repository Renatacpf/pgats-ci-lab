# CI de Nível 01 - Disparo manual a partir de 1 clique

# nome do nosso 'pipeline'
name: 'Execução Manual'

# regras de disparo (gatilhos/triggers)
# gatilho para execução manual = workflow_dispatch
on:
  workflow_dispatch:

# trabalhos/tarefas dentro do pipeline = jobs
jobs:
  e2e-tests:
    #maquina que o job vai executar
    runs-on: self-hosted

    # passos do script de build
    steps:
      # clone do projeto
      - uses: actions/checkout@v4
        with:
            clean: true

      # --- INÍCIO DAS ETAPAS DE DEPURACÃO ---

      - name: 1. Listar arquivos no diretório de trabalho antes da limpeza
        run: |
          echo "Conteúdo de '$env:GITHUB_WORKSPACE' antes da limpeza:"
          Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Depth 1
        shell: pwsh

      - name: 2. Limpando relatório de testes anterior (verificação e remoção)
        run: |
          $reportPath = "$env:GITHUB_WORKSPACE\results.xml"
          echo "Tentando remover: $reportPath"
          if (Test-Path $reportPath) {
            Remove-Item -Path $reportPath -Force -ErrorAction Stop # Forçar erro se não conseguir remover
            echo "Relatório anterior 'results.xml' removido com sucesso."
          } else {
            echo "Nenhum relatório 'results.xml' anterior encontrado para remover."
          }
        shell: pwsh

      - name: 3. Listar arquivos no diretório de trabalho após a limpeza
        run: |
          echo "Conteúdo de '$env:GITHUB_WORKSPACE' após a limpeza:"
          Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Depth 1
        shell: pwsh

      # --- FIM DAS ETAPAS DE DEPURACÃO (pré-instalação) ---

      # instalação do Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x

      # instalação do Yarn
      - name: Instalando Yarn
        run: npm install -g yarn

      # instalação das dependências
      - name: Instalando dependências
        run: yarn
      
      # instalação do Playwright
      - name: Instalando Playwright
        run: yarn playwright install

      # execução dos testes
      - name: Executando testes E2E
        run: yarn run e2e

      # --- INÍCIO DAS ETAPAS DE DEPURACÃO (pós-execução de testes) ---

      - name: 4. Listar arquivos no diretório de trabalho após a execução dos testes
        run: |
          echo "Conteúdo de '$env:GITHUB_WORKSPACE' após a execução dos testes:"
          Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Depth 1
        shell: pwsh

      - name: 5. Verificar e exibir conteúdo do results.xml gerado
        run: |
          $reportPath = "$env:GITHUB_WORKSPACE\results.xml"
          echo "Verificando o arquivo de relatório gerado: $reportPath"
          if (Test-Path $reportPath) {
            echo "Arquivo 'results.xml' encontrado. Conteúdo:"
            Get-Content -Path $reportPath | Select-Object -First 20 # Exibe as primeiras 20 linhas
          } else {
            echo "ERRO: Arquivo 'results.xml' NÃO encontrado após a execução dos testes."
            exit 1 # Falha o job se o arquivo não for encontrado
          }
        shell: pwsh

      # --- FIM DAS ETAPAS DE DEPURACÃO ---

      # Relatórios de Testes - Test Report
      - name: Publicar relatório de testes
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test Report
          path: results.xml
          reporter: java-junit